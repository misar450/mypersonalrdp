name: SSH Ubuntu

on:
  workflow_dispatch:

jobs:
  secure-ssh:
    runs-on: ubuntu-latest
    timeout-minutes: 3600  # Max 60 hours; adjust as needed, but respect GitHub limits

    steps:
      - name: Install and Configure SSH Server
        run: |
          # Update packages and install OpenSSH server
          sudo apt-get update -y
          sudo apt-get install -y openssh-server
          
          # Enable SSH service and allow password authentication
          sudo systemctl enable ssh
          sudo systemctl start ssh
          echo "PasswordAuthentication yes" | sudo tee -a /etc/ssh/sshd_config
          sudo systemctl restart ssh
          
          # Configure firewall to allow SSH (port 22) from anywhere for testing
          sudo ufw allow 22/tcp || true  # '|| true' to handle if UFW isn't installed/enabled
          sudo ufw reload || true

      - name: Create SSH User with Secure Password
        run: |
          # Generate a random secure password
          PASSWORD=$(openssl rand -base64 12 | tr -dc 'a-zA-Z0-9!@#$%^&*()_+' | head -c 16)
          
          # Create the user and set password
          sudo useradd -m -s /bin/bash sshuser
          echo "sshuser:$PASSWORD" | sudo chpasswd
          sudo usermod -aG sudo sshuser  # Add to sudo group for admin access
          
          # Output credentials to env (for later display)
          echo "SSH_CREDS=User: sshuser | Password: $PASSWORD" >> $GITHUB_ENV
          
          # Verify user creation
          if ! id -u sshuser > /dev/null 2>&1; then
            echo "User creation failed"
            exit 1
          fi

      - name: Install Tailscale
        run: |
          # Install Tailscale on Ubuntu
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale version  # Verify installation

      - name: Establish Tailscale Connection
        env:
          TS_DEBUG_MTU: 1400
        run: |
          # Bring up Tailscale with the provided auth key and set a unique hostname
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$GITHUB_RUN_ID
          
          # Wait for Tailscale to assign an IP
          TS_IP=""
          RETRIES=0
          while [ -z "$TS_IP" ] && [ $RETRIES -lt 10 ]; do
            TS_IP=$(tailscale ip -4)
            sleep 5
            RETRIES=$((RETRIES+1))
          done
          
          if [ -z "$TS_IP" ]; then
            echo "Tailscale IP not assigned. Exiting."
            exit 1
          fi
          echo "TAILSCALE_IP=$TS_IP" >> $GITHUB_ENV

      - name: Verify SSH Accessibility
        run: |
          echo "Tailscale IP: $TAILSCALE_IP"
          
          # Test SSH port 22 over Tailscale IP (using nc for a simple TCP check)
          if ! nc -zv $TAILSCALE_IP 22; then
            echo "SSH port 22 connectivity test failed"
            exit 1
          fi
          echo "SSH connectivity successful!"

      - name: Maintain Connection
        run: |
          echo -e "\n=== SSH ACCESS ==="
          echo "Address: $TAILSCALE_IP (connect via Tailscale network)"
          echo "$SSH_CREDS"
          echo "==================\n"
          
          # Keep runner active indefinitely (or until manually cancelled)
          while true; do
            echo "[$(date)] SSH Active - Use Ctrl+C in workflow to terminate or cancel in GitHub UI"
            sleep 300
          done
